version: '3.9'

services:

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/conf:/etc/nginx/conf
    ports:
      - 80:80
      - 443:443

  pg-0:
    image: bitnami/postgresql-repmgr:14
    ports:
      - 5432
    volumes:
      - pg_0_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=foo
      - REPMGR_PASSWORD=postgres
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d default-db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pg-1:
    image: bitnami/postgresql-repmgr:14
    ports:
      - 5432
    volumes:
      - pg_1_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=foo
      - REPMGR_PASSWORD=postgres
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d default-db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgpool:
    image: bitnami/pgpool:latest
    ports:
      - 5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432:0:pg-0:ALLOW_TO_FAILOVER,1:pg-1:5432:1:pg-1:ALLOW_TO_FAILOVER
      - PGPOOL_SR_CHECK_USER=postgres
      - PGPOOL_SR_CHECK_PASSWORD=postgres
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=postgres
      - PGPOOL_ADMIN_USERNAME=postgres
      - PGPOOL_ADMIN_PASSWORD=postgres
    depends_on:
      pg-0:
        condition: service_healthy
      pg-1:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web-1:
    build: ./backend
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    container_name: web-1
    ports:
      - 8000:8000
    environment:
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@pgpool:5432/foo
    depends_on:
      - pgpool
      - rabbitmq
    volumes:
      - ./backend:/src/app
    restart: on-failure

  feed-worker:
    build: ./feed-worker
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8080
    container_name: feed-worker
    ports:
      - 8080:8080
    environment:
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
      - BACKEND_SERVICE_HOST=http://web-1:8000
      - REDIS_HOSTS=redis:6379
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./feed-worker:/src/app
    restart: on-failure

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  web-2:
    build: ./backend
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8001
    container_name: web-2
    ports:
      - 8001:8001
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@pgpool:5432/foo
    depends_on:
      - pgpool
    volumes:
      - ./backend:/src/app
    restart: on-failure

  web-3:
    build: ./backend
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8002
    container_name: web-3
    ports:
      - 8002:8002
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@pgpool:5432/foo
    depends_on:
      - pgpool
    volumes:
      - ./backend:/src/app
    restart: on-failure

  web-4:
    build: ./backend
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8003
    container_name: web-4
    ports:
      - 8003:8003
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@pgpool:5432/foo
    depends_on:
      - pgpool
    volumes:
      - ./backend:/src/app
    restart: on-failure

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - 9090
    ports:
      - 9090:9090
    depends_on:
      - web-1
      - web-2
      - web-3

  grafana:
    image: grafana/grafana:9.2.15
    container_name: grafana
    expose:
      - 3000
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    env_file:
      - ./grafana/config.monitoring
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - 5672:5672